<template>
  <div class="tab">
    <p
      :class="nowIndex==index?'active':''"
      @click="tabChange(index)"
      v-for="(item,index) in tabList"
      :key="index"
      :data-index="index"
    >{{item}}</p>
  </div>
</template>

<script>
export default {
  props: {
    tabIndex: {
      require: true
    },
    tabList: {
      require: true
    }
  },
  data() {
    return {
      nowIndex: 0
    };
  },
  watch: {
    tabIndex: {
      handler(val) {
        this.nowIndex = val;
      }
    }
  },
  methods: {
    tabChange(val) {
      console.log(val)
      this.nowIndex =val
      this.$emit("tabChange", val);
    }
  },
  
};
</script>

<style lang="scss" scoped>
.tab {
  width: 100%;
  height: px2vw(90);
  font-size: px2vw(26);
  font-family: PingFangSC;
  font-weight: 400;
  color: #7d7d7d;
  display: flex;
  flex-direction: row;
  background: #fff;
  z-index: 10000;
  position: fixed;
  left: 0;
  right: 0;
  p {
    flex: 1;
    text-align: center;
    line-height: px2vw(90);
  }
  .active {
    font-size: px2vw(30);
    font-weight: 500;
    color: #262626;
    position: relative;
  }
  .active::after {
    content: " ";
    position: absolute;
    left: 0;
    right: 0;
    bottom: px2vw(10);
    margin: 0 auto;
    height: px2vw(4);
    width: px2vw(32);
    border-radius: px2vw(2);
    background: #262626;
  }
}
</style>