<template>
  <div class="outer">
    <Myheader :title="$route.meta.title" :params="params"></Myheader>
    <div class="search">
      <div @click="onPopup" class="search-scope">
        <div class="search-left" :class="{ showPopup: showPopup }">
          2019.07.08-2019.07.14
        </div>
        <i v-if="showPopup" class="iconfont">&#xe63e;</i>
        <span v-else class="iconfont">&#xe639;</span>
      </div>
    </div>
    <Scroller>
      <div v-if="accountReviews.length == 0" class="empty">
        <div class="img-box">
          <img
            src="@/assets/myAccount/removeLimited/img_kongzhuangtai@2x.png"
            alt
          />
        </div>
        <p>您暂无可查询的审核记录</p>
      </div>
      <div v-else class="audit-out">
        <div
          v-for="item in accountReviews"
          :key="item.accountReviewId"
          class="audit-logging"
        >
          <div class="audit-top">
            <div class="audit-left">{{ item.reviewAccount }}</div>
            <div class="audit-right">
              {{ item.reviewResult == "Y" ? "审核通过" : "审核拒绝" }}
            </div>
          </div>
          <div class="audit-bottom">
            <div class="audit-left">{{ item.userName }}</div>
            <div class="audit-right">2018-11-12 9:30:00</div>
          </div>
        </div>
      </div>
    </Scroller>
    <van-popup v-model="showPopup">
      <template>
        <div class="time">
          <div
            @click="startHandle()"
            class="time-box"
            :class="{ selected: startSelected }"
          >
            {{ startTime }}
          </div>
          <p>至</p>
          <div
            @click="endHandle()"
            class="time-box"
            :class="{ selected: endSelected }"
          >
            {{ endTime }}
          </div>
        </div>
        <p class="hint">{{ timeTip }}</p>
        <van-datetime-picker
          v-model="currentDate"
          type="date"
          :min-date="minDate"
          :max-date="maxDate"
          :formatter="formatter"
          @change="change"
          :show-toolbar="false"
          :item-height="itemHeight"
        />
        <div class="pop-bottom">
          <van-button @click="showPopup = false">取消</van-button>
          <van-button @click="confirm" class="other-btn">确定</van-button>
        </div>
      </template>
    </van-popup>
  </div>
</template>

<script>
import Scroller from "@/components/Scroller.vue";
import Header from "@/components/Header/Header.vue";
import {
  DropdownMenu,
  DropdownItem,
  DatetimePicker,
  Button,
  Popup
} from "vant";

export default {
  components: {
    Myheader: Header,
    Scroller,
    [Popup.name]: Popup,
    [Button.name]: Button,
    [DropdownMenu.name]: DropdownMenu,
    [DropdownItem.name]: DropdownItem,
    [DatetimePicker.name]: DatetimePicker
  },
  data() {
    return {
      params: {
        leftShow: false,
        rightShow: false
      },
      itemHeight: null, //时间选择器单个选项高度
      showPopup: false,
      currentDate: new Date(),
      //起止时间状态
      startSelected: true,
      endSelected: false,
      timeTip: "",
      minDate: null,
      maxDate: new Date(),
      startTime: "",
      endTime: "",
      initTime: "",
      finishTime: "",
      respTime: "", //
      //审核记录
      accountReviews: [
        // {
        //   accountReviewId: "10111",
        //   reviewAccount: "6223380066040011069",
        //   reviewResult: "N",
        //   reviewTime: "1575896524440",
        //   userName: "侯星宇"
        // }
      ]
    };
  },
  created() {
    //时间选择器单个选项高度
    let clientWidth = document.body.clientWidth;
    this.itemHeight = (39 / 375) * clientWidth;
    //时间格式改变
    let year = this.currentDate.getFullYear();
    let month = this.currentDate.getMonth() + 1;
    let day = this.currentDate.getDate();
    let minDate = year - 1 + "/" + month + "/" + day;
    this.minDate = new Date(minDate);
    if (month < 10) {
      month = "0" + month;
    }
    if (day < 10) {
      day = "0" + day;
    }
    this.startTime = year + "-" + month + "-" + day;
    this.endTime = this.startTime;
    this.ApproveRecordQry();
  },
  methods: {
    //完成
    confirm() {
      let startTime = this.startTime.split("-").join(""); //开始时间
      let startYear = this.startTime.split("-")[0]; //开始年份
      let startMonth = this.startTime.split("-")[1]; //获取开始月份
      let startDay = this.startTime.split("-")[2]; //获取开始日
      let endindTime = this.endTime.split("-").join(""); //结束时间
      let endYear = this.endTime.split("-")[0]; //结束年份
      let endMonth = this.endTime.split("-")[1]; //获取结束月份
      let endDay = this.endTime.split("-")[2]; //获取开始日
      if (endYear - startYear > 0) {
        startMonth = startMonth - 12;
      }
      if (endindTime - startTime >= 0) {
        if (endMonth - startMonth == 3) {
          if (endDay - startDay > 0) {
            this.timeTip = "目前仅支持查找3个月跨度的账单";
          } else {
            this.timeTip = "";
            this.showPopup = false;
            this.initTime = startTime;
            this.finishTime = endindTime;
            this.ApproveRecordQry();
          }
        } else if (endMonth - startMonth > 3) {
          this.timeTip = "目前仅支持查找3个月跨度的账单";
        } else {
          this.timeTip = "";
          this.showPopup = false;
          this.initTime = startTime;
          this.finishTime = endindTime;
          this.ApproveRecordQry();
        }
      } else {
        this.timeTip = "结束时间不能早于起始时间";
      }
    },
    //时间选择器数据的过滤
    formatter(type, value) {
      if (type === "year") {
        return `${value}年`;
      } else if (type === "month") {
        return `${value}月`;
      } else if (type === "day") {
        return `${value}日`;
      }
      return value;
    },
    //时间选择器时间改变
    change(value) {
      this.isShow = false;
      let arr = value.getValues();
      if (this.startSelected) {
        this.startTime =
          arr[0].substr(0, 4) +
          "-" +
          arr[1].substr(0, 2) +
          "-" +
          arr[2].substr(0, 2);
      } else {
        this.endTime =
          arr[0].substr(0, 4) +
          "-" +
          arr[1].substr(0, 2) +
          "-" +
          arr[2].substr(0, 2);
      }
    },
    //开始时间
    startHandle() {
      this.startSelected = true;
      this.endSelected = false;
      let startTime = this.startTime.split("-").join(",");
      console.log(startTime);
      this.currentDate = new Date(startTime);
    },
    //结束时间
    endHandle() {
      this.startSelected = false;
      this.endSelected = true;
      let endTime = this.endTime.split("-").join(",");
      console.log(endTime);
      this.currentDate = new Date(endTime);
    },
    //加载更多
    loadingMore() {
      let arr = [];
      this.page++;
      console.log(this.page);
      if (this.allRecords.length > this.page * 10 + 10) {
        arr = this.allRecords.slice(this.page * 10, this.page * 10 + 10);
        console.log(arr);
      } else {
        arr = this.allRecords.slice(this.page * 10);
        console.log(arr);
      }
      this.records.push(...arr);
      console.log(this.records, this.records.length, this.allRecords.length);
    },
    //审核记录查询
    ApproveRecordQry() {
      this.request("ApproveRecordQry", {
        BankId: "9999",
        BranchId: "1699",
        ChnlId: "39",
        QryType: "2", //1 业绩查询 2审核记录查询
        StartTime: this.initTime,
        EndTime: this.finishTime
      })
        .then(res => {
          console.log(res);
          this.respTime = res.RespTime;
          this.accountReviews = res.AccountReviews;
        })
        .catch(error => {
          console.log(error);
        });
    },
    //显示popup
    onPopup() {
      this.showPopup = !this.showPopup;
    }
  }
};
</script>

<style lang="scss" scoped>
.search {
  background: #fff;
  .search-scope {
    width: 50%;
    padding: px2vw(33) 0;
    display: flex;
    justify-content: center;
    .search-left {
      font-size: px2vw(24);
      font-family: PingFangSC-Regular, PingFang SC;
      font-weight: 400;
      color: rgba(38, 38, 38, 1);
      line-height: px2vw(24);
    }
    .showPopup {
      color: rgba(62, 143, 255, 1);
    }
    span {
      font-size: px2vw(6);
      font-family: PingFangSC-Regular, PingFang SC;
      font-weight: 400;
      color: rgba(38, 38, 38, 1);
      line-height: px2vw(24);
      margin-left: px2vw(10);
    }
    i {
      font-size: px2vw(6);
      font-family: PingFangSC-Regular, PingFang SC;
      font-weight: 400;
      color: rgba(62, 143, 255, 1);
      line-height: px2vw(24);
      margin-left: px2vw(10);
    }
  }
}
.scrollerBox {
  background: #f5f6f8;
  .audit-out {
    padding: 0 px2vw(40);
    background: #fff;
    border-top: 1px solid #eff0f1;
    .audit-logging {
      padding: px2vw(28) 0;
      border-bottom: 1px solid #eff0f1;
      .audit-top {
        margin-bottom: px2vw(20);
        display: flex;
        justify-content: space-between;
        .audit-left {
          font-size: px2vw(30);
          font-family: PingFangSC-Regular, PingFang SC;
          font-weight: 400;
          color: rgba(38, 38, 38, 1);
          line-height: px2vw(30);
          letter-spacing: px2vw(1);
        }
        .audit-right {
          font-size: px2vw(30);
          font-family: PingFangSC-Medium, PingFang SC;
          font-weight: 500;
          color: rgba(39, 205, 110, 1);
          line-height: px2vw(30);
        }
      }
      .audit-bottom {
        display: flex;
        justify-content: space-between;
        .audit-left {
          font-size: px2vw(24);
          font-family: PingFangSC-Light, PingFang SC;
          font-weight: 300;
          color: rgba(125, 125, 125, 1);
        }
        .audit-right {
          font-size: px2vw(24);
          font-family: PingFangSC-Light, PingFang SC;
          font-weight: 300;
          color: rgba(125, 125, 125, 1);
        }
      }
    }
    .audit-logging:last-child {
      border-bottom: 0;
    }
  }
  .empty {
    .img-box {
      width: px2vw(300);
      margin: px2vw(86) auto 0;
      img {
        width: 100%;
      }
    }
    p {
      font-size: px2vw(28);
      font-family: PingFangSC-Regular, PingFangSC;
      font-weight: 400;
      color: rgba(168, 168, 168, 1);
      line-height: px2vw(40);
      text-align: center;
    }
  }
}
//遮罩层
/deep/ .van-overlay {
  top: px2vw(178);
}
//弹出层
.van-popup {
  top: px2vw(494);
  width: 100%;
  .time {
    border-top: 1px solid rgba(229, 229, 229, 1);
    padding: px2vw(38) px2vw(108);
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: px2vw(30);
    font-family: PingFangSC;
    font-weight: 400;
    .time-box {
      color: #7d7d7d;
      border-bottom: 1px solid #7d7d7d;
      height: px2vw(52);
    }
    .selected {
      color: #3e8fff;
      border-bottom: 1px solid #3e8fff;
    }
    p {
      color: rgba(38, 38, 38, 1);
    }
  }
  .hint {
    height: px2vw(22);
    font-size: px2vw(22);
    font-family: PingFangSC;
    font-weight: 300;
    color: rgba(255, 64, 64, 1);
    line-height: px2vw(22);
    text-align: center;
  }
  /deep/ .van-picker__frame {
    border-top: 1px solid #e5e5e5;
    border-bottom: 1px solid #e5e5e5;
  }
  /deep/ .van-hairline-unset--top-bottom::after {
    position: static;
  }

  .pop-bottom {
    display: flex;
    .van-button {
      flex: 1;
      height: px2vw(90);
      font-size: px2vw(30);
      font-family: PingFangSC-Regular, PingFang SC;
      font-weight: 400;
      color: rgba(38, 38, 38, 1);
      border-radius: 0;
    }
    .other-btn {
      background: linear-gradient(
        270deg,
        rgba(107, 171, 255, 1) 0%,
        rgba(108, 138, 249, 1) 100%
      );
      color: #ffffff;
    }
  }
}
</style>
