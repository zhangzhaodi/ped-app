<template>
  <div class="outer">
    <Myheader :title="$route.meta.title"></Myheader>
    <div class="content">
      <div class="outer-box">
        <div class="sel-item">
          <div class="left">姓名</div>
          <div class="right">{{ acctName }}</div>
        </div>
        <mInput
          v-model="bankCardNum"
          @input="verify"
          title="卡号"
          type="bankCard"
          placeholder="请输入或扫描本人银行卡号"
          maxlength="19"
          @blur="blurFocus"
        >
          <img
            @click="ScanOcrBankCard"
            slot="right"
            src="@/assets/myAccount/addBankCard/icon_saomiao@2x.png"
            alt
          />
        </mInput>
        <div v-show="payeeBankName" class="sel-item">
          <div class="left">开户行</div>
          <div class="right">{{ payeeBankName }}</div>
        </div>
        <mInput
          v-model="phoneNumber"
          @input="verify"
          title="预留手机号"
          type="phone"
          placeholder="请输入银行卡预留手机号"
          maxlength="11"
        ></mInput>
        <mInput
          v-model="verifyCode"
          @input="verify"
          title="短信验证码"
          type="digit"
          placeholder="请输入短信验证码"
          maxlength="6"
        >
          <div slot="right">
            <span class="verify" @click="sendHandle" v-if="showTime"
              >发送验证码</span
            >
            <van-count-down
              @finish="finish"
              v-else
              :time="time"
              format="sss后重发"
            />
          </div>
        </mInput>
      </div>
      <div class="footer-box">
        <div class="btn-box">
          <van-button :disabled="forbidden" @click="next">绑定</van-button>
        </div>
      </div>
    </div>
  </div>
</template>
<script>
import Header from "@/components/Header/Header.vue";
import mInput from "@/components/Input/bankCardNum.vue";
import { CountDown, Toast } from "vant";

export default {
  components: {
    Myheader: Header,
    mInput,
    [CountDown.name]: CountDown,
    [Toast.name]: Toast
  },
  data() {
    return {
      cardNum: "",
      bankCardNum: "",
      payeeBankName: "",
      phoneNumber: "",
      verifyCode: "",
      forbidden: true,
      //验证码
      showTime: true,
      time: 60 * 1000,
      acctName: "",
      userSmsId: "",
      smsNbr: ""
    };
  },
  created() {
    this.cardNum = this.$route.query.cardNum;
    this.acctName = this.$route.query.acctName;
  },
  methods: {
    verify() {
      if (this.bankCardNum.length == 19) {
        //获取开户行
        this.depositBank = "中国银行";
      }
      if (
        this.bankCardNum.length > 0 &&
        this.phoneNumber.length == 11 &&
        this.verifyCode.length == 6
      ) {
        this.forbidden = false;
      } else {
        this.forbidden = true;
      }
    },
    next() {
      this.ElectActSign();
    },
    sendHandle() {
      if (this.phoneNumber.length == "11") {
        this.showTime = false;
        this.request("SendSmsOtp", {
          BankId: "9999",
          BranchId: "1999",
          ChnlId: "62",
          SmsTransType: "1",
          MobilePhone: this.phoneNumber,
          PhoneNbr: this.phoneNumber
        })
          .then(res => {
            console.log(res.UserSmsId, res.SmsNbr);
            this.smsNbr = res.SmsNbr;
            Toast("短信验证码发送成功");
          })
          .catch(error => {
            console.log(error);
          });
      } else {
        Toast("请输入11位手机号");
      }
    },
    finish() {
      this.showTime = true;
    },
    ElectActSign() {
      this.request("ElectActSign", {
        BankId: "9999",
        BranchId: "0101",
        ChnlId: "39",
        ElectAcNo: this.cardNum,
        AcNo: this.bankCardNum,
        PhoneNbr: this.phoneNumber, //手机号
        MobilePhone: this.phoneNumber, //手机号
        Phone: this.phoneNumber, //手机号
        OTPPassword: this.verifyCode, //6位验证码
        SmsNbr: this.smsNbr,
      })
        .then(res => {
          Toast({
            duration: 2000, // 持续展示 toast
            message: "添加成功",
            icon: require("@/assets/myAccount/addBankCard/ico_right@3x.png")
          });
          setTimeout(() => {
            this.$router.go(-1);
          }, 2000);
        })
        .catch(error => {
          console.log(error);
        });
    },
    //扫描银行卡
    ScanOcrBankCard() {
      window.NativeCall.ScanOcrBankCard(params => {
        let res = JSON.parse(params);
        this.bankCardNum = res.CardNum;
        this.verify();
        this.BankBinQuery();
      });
    },
    blurFocus() {
      if (this.bankCardNum) {
        this.BankBinQuery();
      } else {
        this.payeeBankName = "";
      }
    },
    //查询清算行号
    BankBinQuery() {
      this.request("BankBinQuery", {
        AcctNbr: this.bankCardNum,
        BranchId: "2336",
        ChnlId: "62"
      })
        .then(res => {
          console.log(res);
          this.payeeBankName = res.PayeeBankName;
        })
        .catch(error => {
          console.log(error);
        });
    }
  }
};
</script>
<style lang="scss" scoped>
.outer-box {
  margin-top: px2vw(20);
  padding: 0 px2vw(40);
  background: #fff;
  .sel-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: px2vw(110);
    border-bottom: 1px solid rgba(235, 238, 240, 1);
    font-size: px2vw(30);
    font-family: PingFangSC;
    font-weight: 400;
    color: rgba(38, 38, 38, 1);
    .left {
      width: px2vw(190);
    }
    .right {
      flex: 1;
    }
  }
  /deep/ .mand-input {
    border-bottom: 1px solid rgba(235, 238, 240, 1);
    .md-field-item-title {
      width: px2vw(190);
    }
    .md-field-item-right {
      img {
        width: px2vw(32);
      }
      .more {
        width: px2vw(12);
        height: px2vw(22);
      }
      .verify {
        font-size: px2vw(28);
        font-size: px2vw(28);
        font-family: PingFangSC;
        font-weight: 400;
        color: rgba(62, 143, 255, 1);
      }
      .van-count-down {
        font-size: px2vw(28);
        font-size: px2vw(28);
        font-family: PingFangSC;
        font-weight: 400;
        color: rgba(168, 168, 168, 1);
      }
    }
  }
}
.btn-box {
  padding: 0 px2vw(40);
}
</style>
