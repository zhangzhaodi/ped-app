<template>
  <div class="outer fund-buy">
    <Myheader :title="$route.meta.title" :params="headerParams" :backRouter="headerBackRouter"></Myheader>
    <div class="main">
      <header class="fund-info">
        <h2>{{selectFund.productName}} <span class="iconfont">&#xe649;</span></h2>
        <div class="num">{{selectFund.productNo}}</div>
      </header>
      <section class="section">
        <payer-card :label="`付款卡`" @select="selectPayerCard">
        </payer-card>
      </section>

      <section class="field-section">
        <header class='field-header'>
          <span class="title">申购金额</span>
        </header>
        <transAmt v-model="transAmt" :balance="payerCard.balance" placeholder="1000元起购"  @blur="amtBlur">
          <!-- <div slot="right">全部取出</div> -->
          <div class="info">
            <span>预估手续费：0.00元</span>
            <span>费率：0.0000%</span>
          </div>
        </transAmt>
      </section>
      <!-- <div class="filed_cell section">
        <div class="label">推荐人</div>
        <div class="filed">
          <m-input v-model="refereeNo" :value="refereeNo" placeholder="请输入推荐人工号">
          </m-input>
        </div>
      </div> -->

      <div class="terms">
        <van-checkbox v-model="checked">
          本人已阅读并同意<a href="#">权益须知</a>，已充分了解并知晓本产品风险，愿意承担相关风险。
          <img slot="icon" slot-scope="props" :src="props.checked ? icon.active : icon.inactive">
        </van-checkbox>
      </div>

      <!-- 选择安全工具弹窗 -->
      <security :visible.sync="securityShow" :form='confirmForm' @confirm="handleConfirm"></security>
      <overlay :visible.sync="loading"></overlay>
      <div class="footer-box">
        <div class="btn-box">
          <van-button class="marginLR40" :disabled="disabled" @click="next">确认</van-button>
        </div>
      </div>
    </div>
  </div>
</template>
<script>
import Header from "@/components/Header/Header.vue";
import PayerCard from '@/components/Popup/PayerCard';
import mInput from "@/components/Input/bankCardNum.vue";
import { mapGetters, mapActions, mapState, mapMutations } from "vuex";
import Security from '../components/security';
import Overlay from '../components/overlay';
import TransAmt from "@/components/Input/transAmt.vue"
export default {

  components: {
    Myheader: Header,
    PayerCard,
    mInput,
    Security,
    Overlay,
    TransAmt,
  },
  data() {
    return {
      headerParams: {
        leftShow: true,
        rightShow: true
      },
      headerBackRouter: {
        // name:'confirm',
      },
      fund: {
        name: '易基天天理财货币A',
        number: "00050"
      },
      icon: {
        active: require("@/assets/checked.png"),
        inactive: require("@/assets/unchecked.png"),
      },
      refereeNo: '',
      upperMoney: null,
      transAmt: null,
      checked: false,
      params: {

      },
      payerCard: {
        bankName: '',
        acctName: "",
        vouId: '',
        balance: ''
      },
      securityShow: false,
      confirmForm: {
        bankCard: '',
        transAmt: 0,
        productName: '',
        bankName: '焦作中旅银行'
      },
      loading: false
    };
  },
  computed: {
    ...mapState('common', ['userInfo']),
    ...mapState('fund', ['selectFund']),
    disabled() {
      let disabled = true;
      if (!this.checked) {
        disabled = true;
      } else if (!this.transAmt) {
        disabled = true;
      } else {
        disabled = false;
      }
      return disabled
    },
  },
  created() {
    // console.log(this.userInfo, this.selectFund)
  },
  methods: {
    ...mapMutations('fund', ['SELECTFUND']),
    //选择付款卡
    selectPayerCard(item) {
      console.log('选择的付款卡', item)
      this.payerCard = { ...item };
    },
    amtBlur() {
      if (this.transAmt < 1000) {
        this.transAmt = 1000;
      }
    },
    next() {
      this.params = {
        BranchId: 'PHNE',
        ChnlId: '62',
        BankAcct: this.payerCard.vouId,
        ProductNo: this.selectFund.productNo,
        AMT: this.transAmt,
        ProductType: '0',
        CustomerIdentifyType: '1',
        CustomerIdentify: this.userInfo.Cif.cifNo,//Cif
        TrsAcNo: this.payerCard.vouId,
        CustomerGroup: "0",

      }
      let PerFirstAMT = this.selectFund.perFirstAMT,
        PAddAMT = this.selectFund.paddAMT;
      if (PerFirstAMT) {
        this.params.PerFirstAMT = PerFirstAMT;
      }
      if (PAddAMT) {
        this.params.PAddAMT = PAddAMT;
      }
      this.confirmForm = {
        bankCard: this.payerCard.vouId,
        transAmt: this.transAmt,
        productName: this.selectFund.productName,
        bankName: this.payerCard.bankName
      }
      console.log(this.params, "参数")
      this.securityShow = true;
    },
    // 确认窗点击下一步触发， 调用后台参数校验
    handleConfirm() {
      this.securityShow = false;
      this.checkConfirm();
    },
    checkConfirm() {
      this.request("FinancialPurchaseConfirm", this.params).then(res => {
        console.log(res, "confirm")
        this.params._tokenName = res._tokenName;
        this.passwordCheck();
      }).catch(err => {

      })
    },
    // confirm接口后调用密码组件
    passwordCheck() {
      if (process.env.NODE_ENV == "development") {//随时删除
        this.params.Password = 'MDAwMDAxNDABAgAAAWgAAACkAACrJhjt46TQZR0Hz3FCqOoKawuPsmTEwqOzo3VgOlDRvG9cvO63apTVnWlzrY6kSMrs+f0T2EGVkjBNNTtx5T+dArQF1Qb3IaW2WXaN0JQZG6mkXTanl2zKK8H6XluSS3Mvn+2dKDqYWzAklRQoC8FFvqcb69RmiLy5QMz2qtL+BDAwMDAwMjIz7F3QNk6kJVGQuT5Lh+7hPjzQwE8ueX0wNjy8uB9EFsrh4j6ER9gNGArZiIaV5g51l8NshIT01xi0UKEkMB6aGYf1qZR7ibw9m0PvltYsx4G1jlYTqdnvEGc4HMhmlp6miAf5Pt7BeVY4HHJS7wVUSndEc9Ak+tc1qmj5m/bFuU25cqSUr2sm/ulbRF/q5MeuqxXaZwmTRGpKcNiBLQSDDlSNYZu4rbc3wiamx8UHbNRwi0RTPCu2iLn/hmfa7OgTgQ7ov4l1BCL7I8ByY68SJvpWzk5wHoLOWnlV1NUr8Q==';//本地测试无法调用密码组件 写死
        this.submit();
      } else {
        window.NativeCall.SecureKeyboard(param => {
          this.params.Password = param;
          // this.params.Password = '111111';
          this.submit();
        });
      }
    },
    submit() {
      this.loading = true;
      this.request("FinancialPurchase", this.params).then(res => {
        // this.loading = false;
        let selectFund = { ...this.selectFund };
        selectFund.transAmt = this.transAmt;
        this.SELECTFUND(selectFund);
        this.$router.push({ name: 'subscribeResult' })
      }).catch(err => {
        this.loading = false;
      })
    },
  },
};
</script>
<style lang="scss" scoped>
.footer-box .btn-box button {
  margin-top: px2vw(100);
  background: linear-gradient(
    136deg,
    rgba(224, 207, 174, 1) 0%,
    rgba(199, 165, 127, 1) 100%
  );
}
.transfer-amount{
  .info {
    color: #7d7d7d;
    font-size: px2vw(24);
    padding: px2vw(20) 0;
    span:last-child {
      margin-left: px2vw(200);
    }
  }
}

</style>
