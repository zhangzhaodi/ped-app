<template>
  <div class="viewport">
    <Myheader :title="title"
              :params="params"></Myheader>
    <!-- <div class="time-select">
      <ul class="left-time">
        <li v-for="(item,index) in dateArr"
            :class="{'active':defaultIndex===index}"
            @click="selectDays(item,index)"
            :key="item.days">{{item.title}}</li>
      </ul>
      <div class="more"
           @click="showPopup('calendar')">自定义时间<span class="iconfont">&#xe649;</span></div>
    </div> -->
    <div class="content">
      <ul class="list">
        <template v-for="(item,index) in payList">
          <li :key="index"
              @click="detail(item)">
            <div>
              <img v-if="item.PayType==='0'"
                   src="@/assets/payImages/shuifeiLi.png">
              <img v-else-if="item.PayType==='1'"
                   src="@/assets/payImages/icon_dianfei@2x.png">
              <img v-else-if="item.PayType==='2'"
                   src="@/assets/payImages/ranqifeilist.png">
              <img v-else
                   src="@/assets/payImages/ranqifeilist.png">
              <div>
                <p>{{item.UserName}}</p>
                <span>{{item.PayDate.replace(/(\d{4})(\d{2})/, "$1-$2-")}}</span>
              </div>
            </div>
            <div class="right">
              <p>{{item.PayAmt/100}}元</p>
              <span>户号:{{item.UserNo}}</span>
            </div>
          </li>
        </template>
      </ul>
    </div>
    <popup-round :visible.sync="isPopupShow.calendar"
                 @confirm="confirm"
                 title="时间选择">
      <div class="time-box">
        <div class="time-round">
          <div class="round">
            <p :class="{'active':selectedDate==='BeginDate'}"
               @click="selectedDate='BeginDate'">{{BeginDate}}</p><span>至</span>
            <p :class="{'active':selectedDate==='EndDate'}"
               @click="selectedDate='EndDate'">{{EndDate}}</p>
          </div>
          <p class="tips">结束时间不能早于起始时间</p>
        </div>
        <van-datetime-picker :show-toolbar="false"
                             ref="calendar"
                             v-model="currentDate"
                             :max-date="maxDate"
                             @change="changeDate"
                             type="date" />
      </div>
    </popup-round>
  </div>
</template>

<script>
import Header from "@/components/Header/Header"
import { getDiffDays } from '../js/formateDate'
import PopupRound from "@/components/PopupRound"
import { DatetimePicker, Toast } from 'vant'
export default {
  components: {
    Myheader: Header,
    PopupRound,
    [DatetimePicker.name]: DatetimePicker
  },
  data () {
    return {
      title: "充值记录",
      params: {
        leftShow: false
      },
      dateArr: [
        { title: '近一周', days: -7 },
        { title: '近三月', days: -90 },
        { title: '近六月', days: -180 }
      ],
      currentDate: new Date(getDiffDays(new Date(), -7)),
      maxDate: new Date(),
      isPopupShow: {},
      defaultIndex: 0,
      BeginDate: getDiffDays(new Date(), -7),
      EndDate: getDiffDays(new Date(), 0),
      selectedDate: 'BeginDate',
      payList: []
    }
  },
  mounted () {
    this.initRecord()
  },
  methods: {
    initRecord () {
      const { UserNo } = this.$route.query
      // const { BeginDate, EndDate } = this
      this.request("PaymentRecord", {
        UserNo,
        QueryFlag: '1',
        BankId: "9999",
        BranchId: "1001",
        ChnlId: "62",
      }).then(response => {
        console.log(response)
        this.payList = response.List
      })
    },
    showPopup (type) {
      this.$set(this.isPopupShow, type, true)
    },
    hidePopup (type) {
      this.$set(this.isPopupShow, type, false)
    },
    selectDays ({ days }, index) {
      this.defaultIndex = index
      this.currentDate = new Date(getDiffDays(new Date(), days))
      this.BeginDate = getDiffDays(new Date(), days)
      this.EndDate = getDiffDays(new Date(), 0)
      this.initRecord()
    },
    changeDate (value) {
      this[this.selectedDate] = value.getValues().join('-')
    },
    confirm () {
      if (new Date(this.BeginDate).getTime() > new Date(this.EndDate).getTime()) {
        Toast('结束时间不能早于起始时间')
      } else {
        this.hidePopup('calendar')
        this.initRecord()
      }
    },
    detail (item) {
      this.$router.push({ name: 'paymentRecordDetail', params: { ...item } })
    }
  }
}
</script>

<style lang='scss' scoped>
.viewport {
  height: 100vh;
  display: flex;
  .time-select {
    height: px2vw(100);
    display: flex;
    padding: 0 px2vw(40);
    justify-content: space-between;
    align-items: center;
    font-size: px2vw(22);
    font-family: PingFangSC-Regular, PingFang SC;
    font-weight: 400;
    ul {
      display: flex;
      li {
        margin-right: px2vw(20);
        padding: px2vw(17);
        color: #262626;
        border: px2vw(1) solid #dbdbdb;
        border-radius: px2vw(6);
        &.active {
          color: #3e8fff;
          border: px2vw(1) solid #3e8fff;
        }
      }
    }
    .more {
      color: #999ca0;
      .iconfont {
        font-size: px2vw(22);
      }
    }
  }
  .content {
    margin-top: px2vw(20);
    flex: 1;
    overflow-y: scroll;
    .list {
      padding: 0 px2vw(40);
      background: rgba(255, 255, 255, 1);
      li {
        height: px2vw(120);
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-bottom: px2vw(1) solid #eff0f1;
        .right {
          text-align: right;
        }
        div:first-child {
          display: flex;
          img {
            margin-right: px2vw(20);
            width: px2vw(60);
            height: px2vw(60);
          }
          p {
            font-size: px2vw(30);
            font-family: PingFangSC-Regular, PingFang SC;
            font-weight: 400;
            color: rgba(38, 38, 38, 1);
            margin-bottom: px2vw(16);
          }
          span {
            font-size: px2vw(24);
            font-family: PingFangSC-Regular, PingFang SC;
            font-weight: 400;
            color: rgba(125, 125, 125, 1);
          }
        }
        div:last-child {
          p {
            font-size: px2vw(30);
            font-family: PingFangSC-Regular, PingFang SC;
            font-weight: 400;
            color: rgba(38, 38, 38, 1);
            margin-bottom: px2vw(16);
          }
          span {
            font-size: px2vw(24);
            font-family: PingFangSC-Regular, PingFang SC;
            font-weight: 400;
            color: rgba(125, 125, 125, 1);
          }
        }
      }
    }
  }

  .time-box {
    position: relative;
    .time-round {
      font-family: PingFangSC-Light, PingFang SC;
      font-weight: 400;
      text-align: center;
      .round {
        margin-bottom: px2vw(40);
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: px2vw(30);
        p {
          width: px2vw(180);
          color: #7d7d7d;
          border-bottom: px2vw(1) solid #7d7d7d;
          &.active {
            color: #3e8fff;
            border-bottom: px2vw(1) solid #3e8fff;
          }
        }
        span {
          margin: 0 px2vw(50);
        }
      }
      .tips {
        font-weight: 300;
        font-size: px2vw(22);
        color: rgba(255, 64, 64, 1);
      }
    }
  }
}
</style>
