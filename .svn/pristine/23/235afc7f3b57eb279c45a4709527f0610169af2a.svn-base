<template>
  <!-- 外部包裹 -->
  <div class="outer">
    <!-- 头部组件 -->
    <Myheader
      :title="$route.meta.title"
      :params="headerParams"
      :backRouter="headerBackRouter"
      :backgroundColor="'#fff'"
    >
    </Myheader>
    <div class="content">
      <!-- 付款卡框 -->
        <div class="cardout">
          <DebitCard @select="listdatainfo" :options="options"></DebitCard>
      </div>
          <!-- 费率 -->
    <div class="payCard top white">
      <div class="left">存期</div>
      <div class="right">
        <div class="bank">
          <p>
            <span>{{ratedata}}</span>
          </p>
        </div>
        <i  @click="showPicker = true"  slot="left" class="iconfont icongengduo-"></i>
      </div>
    </div>
    <!-- 费率框 -->
    <van-popup v-model="showPicker" round position="bottom">
      <van-picker
        show-toolbar
        title="存期选择"
        :columns="ratecolumns"
        @cancel="showPicker = false"
        @confirm="onConfirmone"
      />
    </van-popup>
        <!-- 输入金额 -->
          <div class="money top white">
            <p class="title">转账金额(人民币)</p>
            <md-amount
              :value="form.upperMoney"
              is-capital
              :style="{'visibility': form.money?'visible':'hidden'}"
              :error="errortolist"
            ></md-amount>
            <md-input-item
              type="money"
              v-model="form.money"
              @change="onInputChange"
              placeholder="最低起存金额为人民币5万元"
              maxlength="12"
            >
            <div slot="left">￥</div>
            <p v-if="isError" class="error" slot="error">
            <i slot="left" class="iconfont">&#xe62e;</i>
            {{errortolist}}
          </p>
            <!-- <div class="input-operator" slot="right" @click="takeAll">全部转入</div> -->
            </md-input-item>
          <!-- <p class="toast">买入有一定费率，现在购买起息日08-23号</p> -->
          </div>
          <!-- 确定 -->
          <div class="footerBox">
            <div class="btnbox">
              <van-button :disabled="forbidden" @click="toConfirm"  v-preventreclick>下一步</van-button>
            </div>
          </div>
        <!-- 提示 -->
        <!-- <Mynotice></Mynotice> -->
        <confirm :popupFlag="popupFlag" @toResult="toResult" v-if="popupFlag"></confirm>
      </div>
    </div>

</template>

<script>
import Header from "@/components/Header/Header.vue";
import { Amount, InputItem } from "mand-mobile";
import confirm from "../components/confirm";
import DebitCard from "@/components/Popup/DebitCard.vue";
import { Button } from "vant";
import { Field } from "vant";
import { mapActions, mapMutations, mapState, mapGetters } from "vuex";
export default {
  components: {
    Myheader: Header, //头部组件
    [Button.name]: Button,
    [Amount.name]: Amount,
    [InputItem.name]: InputItem,
    [Field.name]: Field,
    confirm:confirm,
    DebitCard:DebitCard,
  },
  data() {
    return{

      cardlist:true,
      nocardlist:true,
      headerParams: {
        leftShow: false,
        rightShow: true
      },
      headerBackRouter: {
        // name:'confirm',
      },
      bank: null,
      form: {
        money: null,
        upperMoney: null,
        Noticereceipt: true,
        TermCode:"1D",
        AutoDepositFlag: "Y",
        DebtType:'A',
      },
      period: null,
      method: null,
      methodSelect: false,
      periodSelect: false,
      forbidden:true,
      artNumber: null, //人工号
      popupFlag: false, //确认页显示
      isError:false,//报错显示
      errortolist:'',//报错内容
      showPicker:false,
      showfukuan:false,
      ratecolumns: [],
      ratedata:'',
      options: {
        showBalance: true,
        showNum: false,
        redBalance: false
      },
    }

},
  watch:{
    //监听卡内金额
      bank:{
        handler:function(val,oldval){
          console.log(val)
        },
        deep:true//对象内部的属性监听，也叫深度监听
      },
      'bank.balance':function(val,oldval){
        console.log(val+"aaa")
        this.bank.balance=val
        if(this.bankshow == 'true'){
          console.log("das");
          this.onInputChange('',Number(this.form.money))
        }
        console.log(this.bank.balance);
      },//键路径必须加上引号
       //监听输入金额
      'form.money':{
        deep:true,
        handler:function(val,oldVal){
          console.log('watch中：',val,oldVal)
          val = val.toString();
        var arr0 = val.split("");
        var arr = val.split(".");
        // 第一位输入的是0的时候进行处理采用第二位的数字
        if (arr0.length == 2 && arr0[0] == "0" && arr0[1] !== ".") {
          this.form.money= Number(arr0[1]);
          console.log( this.form.money)
          return;
        }
        //小数点后超过两位时取前两位
        if (val == "") {
          this.form.money = "";
          console.log( this.form.money)
        } else if ((arr.length == 2 && arr[1].length > 2) || arr[0].length > 14) {
          this.form.money = Number(oldVal);
          console.log( this.form.money)
        }
      }
        }
    },//以V-model绑定数据时使用的数据变化监测
  created(){
        if(this.$route.query.info){
      let Rate= []
        this.$route.query.info.map(item=>{
        Rate.push(item.content)
      })
      this.ratecolumns =Rate
    }
  },
  mounted(){
      console.log(this.$route.query.id)
    if(this.$route.query.id){
          for(var i=0;i<this.ratecolumns.length;i++){
          if(this.ratecolumns[i].indexOf(this.$route.query.id.content) !== -1){
              this.ratedata = this.ratecolumns[i];
              this.onConfirmone(this.ratecolumns[i])
              }
      }
    }else{
      this.ratedata=this.ratecolumns[0]
    }
  },
  methods:{
    listdatainfo(data){
      this.bank = {...data};
      this.bankshow = true
      this.onInputChange('',this.form.money)
    },
      takeAll() {
      this.value = '300000'
    },
    onInputChange(name, value) {
      console.log(value);
      // 先清除样式
      this.isError = false;
      this.options.redBalance = false;
      this.forbidden=true
      // 判断非0 和 非空
      if(value > 0  && value !== ''  ){
      this.form.upperMoney = parseFloat(value);
      var newprice = parseFloat(value);
      console.log(newprice);
      if (Number(newprice)< 50000&&Number(newprice)>0 ) {
        this.isError = true;
        this.errortolist = "5万起购";
        this.options.redBalance = true;
        this.forbidden=true
      }
      else if (Number(this.bank.balance) - newprice== 0) {
        this.isError = false;
        this.options.redBalance = false;
        this.forbidden=false
      }
      else if (Number(this.bank.balance) - newprice < 0) {
        this.isError = true;
        this.errortolist = "可用余额不足";
        this.options.redBalance = true;
        this.forbidden=true
      }
      else if (Number(this.bank.balance) == 0) {
        this.isError = false;
        this.errortolist = "可用余额不足";
        this.options.redBalance = false;
        this.forbidden=true
      }
      else {
        this.isError = false;
        this.options.redBalance = false;
        this.forbidden=false
      }
      }
    },
    periodChange(val) {
      this.period = val;
    },
    methodChange(val) {
      this.method = val;
    },
    onConfirmone(value) {
      var str =value.split("(")[0]
      if(str == "7天"){
        this.form. TermCode= "7D";
      }else{
        this.form. TermCode= "1D";
      }
      this.ratedata=value;
      this.showPicker = false;
    },
    toConfirm() {
      //弹出底部弹框
      // this.$router.push({
      //   path: '/rollinresult'
      // });
      this.$store.state.params = { ...this.form, ...this.data };
      this.$store.state.params.bank = { ...this.bank };
      console.log(this.$store.state.params,"vuex进入触发")
      // console.log(1,this.form)
      this.popupFlag = true;
    },
    toResult(data) {
      if(data !== 0){
          this.popupFlag = false;
        }
      // window.NativeCall.SecureKeyboard(params => {
      //   if (parasm.ReturnMsg == "交易成功") {
      //     this.$router.push({ name: result });
      //   }
      // });
      // console.log('跳转到结果页')
      // this.$router.push({
      //   name: 'result'
      // });
    }
  }
}
</script>

<style lang="scss" scoped>
// 重置样式
p,
h1,
h2,
h3,
h4,
h5,
img,
div {
  margin: 0;
  padding: 0;
}
// 外部样式
.outer {
  display: flex;
  height: 100%;
  flex-direction: column;
  width: 100vw;
  -webkit-scrollbar {
    display: none;
  }
}
// 内部样式
.content {
  display: flex;
  flex-direction: column;
  flex: 1;
  overflow: auto;
}
.top {
  margin-top: px2vw(20);
}
.white {
  background: #fff;
}
.left {
  font-size: px2vw(30);
  font-weight: 400;
  color: #262626;
}
.product {
  font-size: 0;
  padding: px2vw(21) px2vw(40) px2vw(20);
  .name {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: px2vw(32);
    font-weight: 500;
    color: #262626;
      .iconfont {
    font-size: px2vw(22);
    color: #7d7d7d;
  }
  }
  .rate{
    height:px2cw(32);
    font-size:px2cw(32);
    font-family:PingFangSC-Medium,PingFangSC;
    font-weight:500;
    color:rgba(247,90,80,1);
    line-height:px2cw(32);
  }
  .num {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: px2vw(26);
    font-weight: 400;
    color: #a8a8a8;
    margin-top: px2vw(11);
  }
}
.payCard {
  background: #fff;
  padding: px2vw(20) px2vw(40);
  height: px2vw(110);
  display: flex;
  box-sizing: border-box;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
   .iconfont {
    font-size: px2vw(22);
    color: #7d7d7d;
  }
  .right {
    margin-left: px2vw(40);
    flex: 1;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    .bank {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      p {
        font-size: 0;
        span {
          font-size: px2vw(30);
          color: #262626;
        }
      }
      .remain {
        font-size: 0;
        span {
          color: #7d7d7d;
          font-size: px2vw(24);
          font-weight: 300;
        }
      }
    }
  }
}
.money {
  background: #fff;
  height: px2vw(320);
  padding: 0 px2vw(40);
  box-sizing: border-box;
  .title {
    height: px2vw(80);
    line-height: px2vw(80);
    font-size: px2vw(30);
    font-weight: 400;
    color: #262626;
    margin-top: px2vw(20);
  }
  .toast {
    height: px2vw(60);
    line-height: px2vw(60);
    color: #7d7d7d;
    font-size: px2vw(24);
  }
}
.period {
  height: px2vw(110);
  background: #fff;
  padding: 0 px2vw(40);
}
.methods {
  height: px2vw(110);
  background: #fff;
  padding: 0 px2vw(40);
  .right {
    font-size: px2vw(30);
  }
}

/deep/ .van-field__control:disabled {
  color: #a8a8a8;
  font-size: px2vw(30);
}
/deep/ .van-field__control {
  color: #262626;
  font-size: px2vw(30);
  // margin-top: px2vw(-6);
}
/deep/ .md-field-item-content{
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
}
/deep/ .md-field-item-content:before {
  border-bottom: px2vw(1) solid #eff0f1;
}
/deep/ .md-input-item.is-error .md-field-item-content:before {
  border: none;
}
/deep/ .md-field-item-children {
  margin-top: px2vw(-20);
}
/deep/ .md-amount {
  font-size: px2vw(24);
  font-family: PingFangSC;
  font-weight: 400;
  color: rgba(255, 181, 43, 1);
  margin-top: px2vw(18);
}
/deep/ .md-input-item {
  height: px2vw(66);
  line-height: px2vw(66);
  display: flex;
  flex-direction: column;
  // align-items: center;
  // padding-bottom: px2vw(29);
}
/deep/ .md-input-item-input{
  font-size:px2vw(40);
}
/deep/ .md-field-item-left {
      font-size: px2vw(40);
      color: #262626FF;
      padding-top: px2vw(10);
  }
/deep/ .md-field-item-control {
        flex: 1;
        display: flex;
        align-items: center;
        .md-input-item-input {
          width: 100%;
          &::-webkit-input-placeholder {
            /* WebKit, Blink, Edge */
            color: #a8a8a8;
            font-size: px2vw(40);
            line-height: normal;
            font-family: PingFangSC;
            font-weight: 300;
          }
          &::-moz-placeholder {
            /* Mozilla Firefox 19+ */
            color: #a8a8a8;
            font-size: px2vw(40);
            font-family: PingFangSC;
            font-weight: 300;
          }
          &::placeholder {
            /* 大部分现代浏览器 */
            color: #a8a8a8;
            font-size: px2vw(40);
            font-family: PingFangSC;
            font-weight: 300;
          }
          &::-ms-input-placeholder {
            /* Microsoft Edge */
            color: #a8a8a8;
            font-size: px2vw(40);
            font-family: PingFangSC;
            font-weight: 300;
          }
        }
      }

.cardout {
  background: #fff;
  padding: 0 px2vw(40) 0;
}

.footerBox{
  display: flex;
  justify-content: center;
  margin-top: px2vw(160);
  width: 100%;
  text-align: center;
  font-size: px2vw(32);
  color: rgba(255, 255, 255, 1);
  height: px2vw(90);
  line-height: px2vw(90);
  .btnbox{
    width: px2vw(670);
    /deep/ .van-button  {
    width: 100%;
    color: rgba(255, 255, 255, 1);
    border-radius: px2vw(45);
    background:linear-gradient(270deg,rgba(248,204,173,1) 0%,rgba(218,154,120,1) 100%);
  }
  }
}
</style>
