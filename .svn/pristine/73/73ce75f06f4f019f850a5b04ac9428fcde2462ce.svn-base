<template>
  <div>
    <Myheader :title="$route.query.BizType | filterTitle"
              :params="{leftShow: false}" />
    <div class="content"
         v-if="params">
      <div class="amount_bill">
        <div>应缴金额(人民币)</div>
        <div>{{params.PayAmt/100}}</div>
      </div>
      <div class="list">
        <ul>
          <li>
            <label> 户名</label>
            <p>{{params.PayUserName}}</p>
          </li>
          <li>
            <label> 缴费单位</label>
            <p>{{$route.query.CompanyInfo.BusinessName}}</p>
          </li>
          <li>
            <label> 缴费户号</label>
            <p>{{params.UserNo}}</p>
          </li>
          <li>
            <label>住址信息</label>
            <p>郑州市</p>
          </li>
        </ul>
      </div>
    </div>
    <div class="amount">
      <div>充值金额</div>
      <div>
        <input type="text"
               v-model="PayAmt"
               placeholder="请输入">
        <span @click="PayAmt=params.PayAmt">全部应缴</span>
      </div>
    </div>
    <button @click="show = true">立即缴费</button>
    <van-popup v-model="show"
               round
               position="bottom"
               :style="{ height: '60%' }">

      <div class="pay_info">
        <span @click="show = false">x</span>
        <div v-show="false">确认支付</div>
        <div>请输入交易密码</div>
      </div>
      <div v-show="showPassword">
        <div class="sum">
          <i>￥</i>
          <h2>{{PayAmt}}</h2>
        </div>
        <div class="pay_list">
          <ol>
            <li>
              <label>订单信息</label>
              <span>{{$route.query.BizType | filterTitle}}缴费</span>
            </li>
            <li>
              <DebitCard @select="handleSelect"
                         :options="{  
                          showBalance: true,
                          showNum: false,
                          redBalance: false }" />
            </li>
          </ol>
        </div>
        <button @click="paymentConfirm">立即付款</button>
      </div>
      <div v-show="!showPassword">
        <van-password-input :value="value"
                            :focused="showKeyboard"
                            @focus="showKeyboard = true" />
        <!-- 数字键盘 -->
        <van-number-keyboard :show="showKeyboard"
                             @input="
                             onInput"
                             @delete="onDelete"
                             @blur="showKeyboard = false" />
      </div>
    </van-popup>
  </div>
</template>

<script>
import Header from "@/components/Header/Header.vue";
import { getSystemTime, getCurrentTimer } from '../js/formateDate'
import DebitCard from '@/components/Popup/DebitCard'
import { Toast } from 'mand-mobile'
export default {
  components: {
    Myheader: Header,
    DebitCard
  },
  data () {
    return {
      title: "电费",
      show: false,
      // 键盘密码框
      value: '',
      params: null,
      PayAmt: '',
      PayAcct: '',
      AccountBanlance: '',
      PayPIN: '111111',
      showKeyboard: true,
      showPassword: true,
    }
  },
  mounted () {
    this.initRecord()
  },
  filters: {
    filterTitle (val) {
      return { '0': '水费', '1': '电费', '2': '燃气费', '4': '手机话费' }[val]
    }
  },
  computed: {
    // 特殊字段 Filed 处理（缴费确认和销账用到）
    Fileds () {
      let obj = {}
      for (let i in this.params) {
        if (i.includes('Filed')) {
          obj[i] = this.params[i]
        }
      }
      return obj
    }
  },
  methods: {
    selectPayeeCard (item) {
      this.debitCard = item
    },
    onInput (key) {
      this.value = (this.value + key).slice(0, 6);
    },
    onDelete () {
      this.value = this.value.slice(0, this.value.length - 1);
    },
    initRecord () {
      console.log(this.$route.query)
      const { UserNo, CompanyInfo, BizType } = this.$route.query
      this.request("PaymentClientQry", {
        // 商户名
        UserNo,
        // 缴费单位信息
        ...CompanyInfo,
        // 固定参数
        BeginNum: '1',
        // 测试案例判断，正式环境得修改
        QueryNum: BizType === '0' ? '99' : '1',
        BankId: "9999",
        BranchId: "1699",
        ChnlId: "39",
      }).then(response => {
        console.log(response)
        this.params = response
      }).catch(error => {
        console.log(error);
      })
    },
    handleSelect ({ vouId, balance }) {
      console.log(vouId, balance)
      this.PayAcct = vouId
      this.AccountBanlance = balance
    },
    paymentConfirm () {
      const { PayAmt, PayAcct, AccountBanlance } = this
      const { PayUserName, UserNo, NowLoanAmt, ContractNo } = this.params
      const { CompanyInfo } = this.$route.query
      let params = {
        // 缴费单字段
        PayUserName,
        UserNo,
        NowLoanAmt,
        ContractNo,
        // 缴费单中特殊字段
        ...this.Fileds,
        // 缴费公司字段
        ...CompanyInfo,
        // 账户字段
        AccountBanlance,
        PayAcct,
        PayAmt,
        // 默认字段
        BankId: "9999",
        BranchId: "1001",
        ChnlId: "62",
      }
      console.log(params)
      this.request("PayBillConfirm", params).then(response => {
        if (response._RejCode === '000000') {
          this.passwordCheck(response)
        }
      }).catch(error => {
        console.log(error);
      })
    },
    passwordCheck (response) {
      this.show = false
      window.NativeCall.SecureKeyboard(param => {
        this.PayPIN = param;
        this.paymentSubmit(response)
      })
    },
    paymentSubmit (params) {
      const { PayPIN } = this
      this.request("PayBill", { ...params, TrsAcNo: this.PayAcct, PayPIN }).then(response => {
        if (response.RespCode === '000000') {
          const { PayTranSeqNo } = response
          const { PayUserName, UserNo } = this.params
          this.$router.push({ path: '/completePay', query: { PayTranSeqNo, PayUserName, UserNo } })
        } else {
          Toast.info('缴费失败')
        }
      }).catch(error => {
        console.log(error);
      })
    }
  }
}
</script>

<style lang='scss' scoped>
.content {
  .amount_bill {
    background-color: #fff;
    padding-left: px2vw(40);
    box-sizing: border-box;
    margin-top: px2vw(20);
    div:first-child {
      font-size: px2vw(30);
      font-family: PingFangSC-Regular, PingFang SC;
      font-weight: 400;
      color: rgba(38, 38, 38, 1);
      height: px2vw(80);
      line-height: px2vw(80);
    }
    div:last-child {
      font-size: px2vw(50);
      font-family: PingFangSC-Medium, PingFang SC;
      font-weight: 500;
      height: px2vw(90);
      color: rgba(38, 38, 38, 1);
    }
  }
  .list {
    background-color: #fff;
    padding: 0 px2vw(40);
    margin-top: px2vw(20);
    li {
      display: flex;
      align-items: center;
      justify-content: space-between;
      height: px2vw(110);
      border-bottom: 1px solid #ebeef0;
      label,
      p {
        font-size: px2vw(30);
        font-family: PingFangSC-Regular, PingFang SC;
        font-weight: 500;
        color: rgba(38, 38, 38, 1);
      }
    }
  }
}

.amount {
  background-color: #fff;
  margin-top: px2vw(20);
  width: 100%;
  padding: 0 px2vw(40);
  box-sizing: border-box;
  div:first-child {
    height: px2vw(80);
    border-bottom: 1px solid #ebeef0;
    line-height: px2vw(80);
    font-size: px2vw(30);
    font-family: PingFangSC-Regular, PingFang SC;
    font-weight: 500;
    color: rgba(38, 38, 38, 1);
  }
  div:last-child {
    height: px2vw(120);
    display: flex;
    justify-content: space-between;
    align-items: center;
    input {
      height: px2vw(119);
      font-size: px2vw(40);
      font-family: PingFangSC-Light, PingFang SC;
      font-weight: 300;
      color: rgba(168, 168, 168, 1);
    }
    span {
      font-size: px2vw(26);
      font-family: PingFangSC-Regular, PingFang SC;
      font-weight: 400;
      color: rgba(0, 139, 255, 1);
    }
  }
}
button {
  width: px2vw(670);
  height: px2vw(90);
  background: linear-gradient(
    270deg,
    rgba(181, 213, 255, 1) 0%,
    rgba(182, 197, 252, 1) 100%
  );
  border-radius: px2vw(45);
  font-size: px2vw(34);
  font-family: PingFangSC-Regular, PingFang SC;
  font-weight: 400;
  color: rgba(255, 255, 255, 1);
  margin-left: px2vw(45);
  margin-top: px2vw(100);
}
.pay_info {
  height: px2vw(100);
  font-size: px2vw(34);
  font-family: PingFangSC-Regular, PingFang SC;
  font-weight: 400;
  color: rgba(38, 38, 38, 1);
  display: flex;
  align-items: center;
  span {
    margin: px2vw(40);
    color: #7d7d7d;
    font-size: px2vw(40);
  }
  div {
    width: px2vw(300);
    height: px2vw(100);
    line-height: px2vw(100);
    font-size: px2vw(40);
    font-family: PingFangSC-Regular, PingFang SC;
    font-weight: 500;
    color: rgba(38, 38, 38, 1);
    margin: 0 auto;
  }
}
.sum {
  width: px2vw(220);
  height: px2vw(98);
  margin: px2vw(60) auto;
  display: flex;
  justify-content: space-around;
  align-items: center;
  i {
    font-size: px2vw(40);
    font-family: PingFangSC-Medium, PingFang SC;
    font-weight: 500;
    color: rgba(38, 38, 38, 1);
  }
  h2 {
    font-size: px2vw(60);
    font-family: PingFangSC-Medium, PingFang SC;
    font-weight: 500;
    color: rgba(38, 38, 38, 1);
  }
}
.pay_list {
  padding: 0 px2vw(20);
  li {
    padding: px2vw(20) 0;
    border-bottom: 1px solid #ebeef0;
    align-items: center;
    display: flex;
    justify-content: space-between;
    label {
      font-size: px2vw(28);
      font-family: PingFangSC-Light, PingFang SC;
      font-weight: 300;
      color: rgba(125, 125, 125, 1);
    }
    span {
      font-size: px2vw(28);
      font-family: PingFangSC-Regular, PingFang SC;
      font-weight: 400;
      color: rgba(0, 0, 0, 1);
    }
    .payment_way {
      font-family: PingFangSC-Regular, PingFang SC;
      font-weight: 400;
      p:first-child {
        font-size: px2vw(28);
        font-family: PingFangSC-Regular, PingFang SC;
        font-weight: 400;
        color: rgba(38, 38, 38, 1);
      }
      p:last-child {
        font-size: px2vw(24);
        font-family: PingFangSC-Light, PingFang SC;
        font-weight: 300;
        color: rgba(125, 125, 125, 1);
        margin-top: px2vw(16);
      }
    }
    img {
      width: px2vw(12);
      height: px2vw(24);
    }
  }
}
button {
  width: px2vw(670);
  height: px2vw(90);
  background: linear-gradient(
    270deg,
    rgba(107, 171, 255, 1) 0%,
    rgba(108, 138, 249, 1) 100%
  );
  border-radius: px2vw(45);
}
</style>
