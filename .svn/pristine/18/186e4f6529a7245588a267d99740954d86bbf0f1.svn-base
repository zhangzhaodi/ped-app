<template>
  <div class="outer">
    <div class="header">
      <span class="iconfont" @click="goBack">&#xe630;</span>
      <span class="title">{{$route.meta.title}}</span>
      <span class="edit" @click="onSubmit">{{$route.meta.right}}</span>
    </div>
    <section class="field-section">
        <van-cell-group class="filed_cell payee" @click="openCardList">
          <van-cell>
            <template slot="title">
              <span class="custom-title">收款账户</span>
            </template>
            <template>
              <span  style="color:#282828;">中旅银行 | {{selectItem.CustomerName}}（{{selectItem.AcNo | CardNoFour}}）</span>
            </template>
            <template slot="right-icon">
              <div>
                <span class="iconfont">&#xe649;</span>
              </div>
            </template>
          </van-cell>
        </van-cell-group>
    </section>
    <section class="field-section">
      <div class="filed_cell">
        <div class="label">身份证号</div>
        <div class="filed">
          <m-input :maxlength="19" v-model="selectItem.IdNo" :value="selectItem.IdNo" :readonly="true" placeholder="请输入身份证号">
          </m-input>
        </div>
      </div>

      <div class="filed_cell">
        <div class="label">手机号</div>
        <div class="filed">
          <m-input type="phone" v-model="selectItem.Phone" :value="selectItem.Phone" :readonly="true" placeholder="请输入银行预留手机号">
          </m-input>
        </div>
      </div>
    </section>

    <div class="terms">
      <van-checkbox v-model="checked">
        本人已阅读并同意<a href="#">《条款》</a>
        <img slot="icon" slot-scope="props" :src="props.checked ? icon.active : icon.inactive">
      </van-checkbox>
    </div>
    <div class="del">
      <van-button type="default" :disabled="disabled" @click="captchaShow = true;" :close-on-click-overlay="false">更换</van-button>
    </div>

    <captcha :visible.sync="captchaShow" :phoneNum="phone" @confirm="onSubmitConfirm"></Captcha>

     <!-- 选择付款银行卡弹层 -->
    <popup-round class="payee-card-popup " :visible.sync="popupShow" :title="`选择账户`" @confirm="handleConfirm">
      <van-radio-group v-model="tempItem.AcNo">
        <van-cell-group>
          <van-cell class="payee-card__select" v-for="(item,index) in phoneConfig.payeeCardList" :key="index" :title="item.name" clickable @click="handleSelect(item)">
            <template slot="title">
              <div class="bank-icon_wrap">
                <img :src="require(`@/assets/bankIcon/icon_CTS.png`)" alt />
              </div>
            </template>
            <template slot="default">
              <div>
                <p class="card">{{item.AcNo | CardHide}}</p>
                <div class="balance">{{item.bankName || '焦作中旅银行'}}</div>
                <!-- | {{item.contTypCd | cardTypeName}}{{item.acctName ? `-${item.acctName}`: ''}} -->
              </div>
            </template>
            <van-radio slot="right-icon" :name="item.AcNo">
              <img slot="icon" slot-scope="props" v-show="props.checked" class="check-icon" :src="props.checked ? icon2.active : icon2.inactive">
            </van-radio>
          </van-cell>
        </van-cell-group>
      </van-radio-group>
    </popup-round>

  </div>
</template>

<script>
import { Icon, Toast } from "vant";
import mInput from "@/components/Input/bankCardNum.vue";
import { mapMutations, mapState } from "vuex";
import Dialog from "@/components/Dialog/Dialog.vue";
import Captcha from '@/components/Popup/Captcha';
import PopupRound from "@/components/PopupRound";
export default {
  components: {
    [Icon.name]: Icon,
    [Toast.name]: Toast,
    mInput,
    MyDialog: Dialog,
    Captcha,
    PopupRound
  },
  data() {
    return {
      selectItem: {},
      tempItem: {},
      checked: false,
      phone: '',
      icon: {
        active: require("@/assets/checked.png"),
        inactive: require("@/assets/unchecked.png"),
      },
      icon2: {
        active: require("@/assets/electronicAccounts/icon_xueli_xuanze@2x.png"),
        inactive: ""
      },
      captchaShow: false,
      popupShow:false,
      oldAcNo:'',
    }
  },
  created() {
    if (this.$route.params.selectItem) {
      this.selectItem = this.$route.params.selectItem;
      this.oldAcNo = this.selectItem.AcNo;
      this.tempItem = {...this.selectItem}
    }
  },
  computed: {
    ...mapState('transferAccounts', ['phoneConfig']),
    disabled() {
      let disabled = true;
      if (!this.checked) {
        disabled = true;
      } else {
        disabled = false
      }
      return disabled
    },
    // selectItem(){
    //   if(this.phoneConfig.selectItem){
    //     return this.phoneConfig.selectItem;
    //   }else{
    //     return {}
    //   }
    // },
  },
  methods: {
    ...mapMutations('transferAccounts', ['PHONECONFIG']),
    goBack() {
      this.$router.go(-1);
    },
    handleSelect(item) {
      this.tempItem = { ...item };
    },
    openCardList() {
      this.popupShow = true;
    },
    onSubmitConfirm(data) {
      let params = {
        NewBindAcNo: this.selectItem.AcNo,
        DeleBindAcNo: this.oldAcNo,
        ChangFlag: 1,
        IdNo: this.selectItem.IdNo,
        IdType: this.selectItem.IdType == '1' ? 'IC00' : this.selectItem.IdType,
        OTPPassword: data.code,
        SmsNbr: data.SmsNbr,
      }
      this.captchaShow = false;
      this.request('DeleteBindAcNoConfirm', params).then(res => {
        params._tokenName = res._tokenName
        this.onSubmit(params);
      }).catch(err => {
      })

    },
    handleConfirm() {
      this.selectItem = { ...this.tempItem };
      this.popupShow = false;
    },
    onSubmit(params) {
      this.request('DeleteBindAcNo', params).then(res => {
        let phoneConfig = { ...this.phoneConfig }
        phoneConfig.cardNo = this.selectItem.AcNo;
        phoneConfig.selectItem = this.selectItem;
        this.PHONECONFIG(phoneConfig);//前端本地vuex更新绑定手机号。返回上一页设置时，更新绑定手机号显示。（下次重新进入后会调用后台接口刷新vuex）
        this.$toast({
          message: "更换成功",
          icon: require("@/assets/myAccount/addBankCard/ico_right@3x.png")
        });
        this.$router.go(-1);
      }).catch(err => {
      })
    },
  },
};
</script>
<style lang="scss" scoped>
/deep/ .payee-card-popup {
  .van-cell {
    height: px2vw(110);
    padding: 0 px2vw(40);
  }
}
.outer {
  width: 100%;
  height: 100%;
  background-color: #f5f6f8;
  font-size: px2vw(30);
  font-family: PingFangSC;
  color: #262626;
  line-height: px2vw(30);
  .header {
    height: px2vw(88);
    background-color: #fff;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-content: center;
    align-items: center;
    padding: 0 px2vw(40);
    .title {
      font-size: px2vw(36);
      line-height: px2vw(36);
    }
  }
}
/deep/ .van-field__control {
  height: 100%;
}
/deep/ .van-cell {
  padding: 0;
  .iconfont{
    font-size:px2vw(12);
    color:#999CA0;
  }
}

/deep/ .van-hairline--top-bottom::after {
  border-width: 0;
}
/deep/ .van-field__control:disabled {
  color: #262626;
}
.del {
  padding: 0 px2vw(40);
  /deep/ .van-button {
    width: px2vw(670);
    height: px2vw(90);
    line-height: px2vw(90);
    color: #fff;
    background:linear-gradient(270deg,rgba(107,171,255,1) 0%,rgba(108,138,249,1) 100%);
    font-size: px2vw(34);
    border-radius: px2vw(45);
    margin-top: px2vw(101);
  }
}

//付款卡选择
/deep/ .payee-card__select {
  line-height: initial;
  .van-cell__title {
    flex: none;
    align-items: center;
    display: flex;
  }
  .bank-icon_wrap {
    width: px2vw(64);
    height: px2vw(64);
    align-items: center;
    margin-right: px2vw(20);
    img {
      height: 100%;
    }
  }
  .van-cell__value {
    text-align: left;
    align-items: center;
    display: flex;
    .card {
      font-size: $font-size;
      color: $color-text;
      margin-bottom: px2vw(14);
      line-height: 1.2;
    }
    .balance {
      font-size: px2vw(24);
      color: #7d7d7d;
      line-height: 1.2;
    }
  }
}
</style>