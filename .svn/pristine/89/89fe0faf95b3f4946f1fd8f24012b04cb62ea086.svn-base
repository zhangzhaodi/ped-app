<template>
  <!-- 外部包裹 -->
  <div class="outer">
    <!-- 头部组件 -->
    <Myheader :title="$route.meta.title"  :backRouter="headerBackRouter" :backgroundColor="'none'" ></Myheader>
    <div class="content">
      <!-- 上部筛选 -->
      <van-dropdown-menu active-color="#3E8FFFFF">
        <van-dropdown-item v-model="value1"   @confirm="confirm"   :options="option1"  >
           <span  v-if="isif" class="dropdown_span"   @click="getinfo(false)">按月选择
             <i slot="left" class="iconfont little_mark">&#xe641;</i>
           </span>
           <span v-else    class="dropdown_span"  @click="getinfo(true)">按日选择
             <i slot="left" class="iconfont little_mark">&#xe641;</i>
           </span>
           <div  v-if="isif"  >
           <div class="mounthtimestyle">
             <span v-if="mounthtime !== '' "> {{mounthtime}}</span>
              <span v-else>{{settime}}</span>
              </div>
                <van-datetime-picker
                  type="year-month"
                  v-model="currentDate"
                  :formatter="formatter"
                  @confirm="confirm"
                  @change="change"
                  @cancel="cancel"
                />
            </div>
            <div  v-if="!isif">

                <div class="mounthtimestyle">
                  <div @click="startHandle()" class="time-box" :class="{selected:startSelected}">{{startTime}}</div>
                  <p class="mounthtimestyle_p">至</p>
                  <div @click="endHandle()" class="time-box" :class="{selected:endSelected}">{{endTime}}</div>
                </div>
                <p class="hint" v-show="isShow">结束时间不能早于起始时间</p>
                <van-datetime-picker
                  v-model="currentDate"
                  type="date"
                  :min-date="minDate"
                  :max-date="maxDate"
                  :formatter="formatter"
                  @change="change"
                />

            </div>
        </van-dropdown-item>
         <van-dropdown-item v-model="value2" :options="option2" />
      </van-dropdown-menu>
      <!-- 中部内容 -->
        <div class="article" v-for="(itme,i) in historylist">
          <div class="article_left">
            <img class="img" v-if="itme.way == 'credit' " src="@/assets/travelTreasure/transactionhistory/icon_mairu@2x.png" />
            <img class="img" v-else src="@/assets/travelTreasure/transactionhistory/icon_mairu@2x1.png"  />
            <div class="article_left_data">
              <p>{{itme.name}}</p>
              <span>{{itme.time}}</span>
            </div>
          </div>
          <div class="article_right">
            <p>{{itme.price | Money}}</p>
            <h5>中旅银行 | 储蓄卡({{itme.card | CardNoFour}})</h5>
          </div>
        </div>
    </div>
  </div>
</template>
<script>
import Header from "@/components/Header/Header.vue";
import { Button,DropdownMenu, DropdownItem,DatetimePicker,Switch,Popup } from "vant";
export default {
  components: {
    Myheader: Header,   //头部组件
    [Button.name]: Button,
    headerParams: {
        leftShow: true,
        rightShow: false
      }
  },
  data() {
    return {
       headerBackRouter: {
        // name:'confirm',
      },
        //是否显示提示信息
      isShow: false,
      //快捷选择查询时间
      weekly: true,
      threeMonth: false,
      sixMonth: false,
      //默认查询记录时间
      section: "2019.08.16-2019.08.23",
      //展示弹出层
      visible: false,
      show: true,
      //时间选择器
      minDate: new Date(2009, 1, 1),
      maxDate: new Date(2029, 10, 1),
      currentDate: new Date(),
      //显示的起始时间
      startTime: "",
      endTime: "",
      initTime: "",
      finishTime: "",

      //起始时间选中状态的类名
      startSelected: true,
      endSelected: false,
      //显示切换
      isif:true,
      activeClass:-1,
      value1: 0,
      value2: 'a',
      mounthtime:'',
      currentDate: new Date(),
       option1: [
        { text: '全部商品', value: 0 },
      ],
      option2: [
        { text: '全部类型', value: 'a' },
        { text: '转出', value: 'b' },
        { text: '转入', value: 'c' },
      ],
      historylist:[
        {name:"易基金天天理财A",time:"2019-08-22 09:30",price:"100",card:"21468237648764728574572",way:"credit"},
        {name:"易基金天天理财A",time:"2019-08-22 09:30",price:"100",card:"21468237648764728574572",way:"credit"},
        {name:"易基金天天理财A",time:"2019-08-22 09:30",price:"100",card:"21468237648764728574572",way:"credit"},
        {name:"易基金天天理财A",time:"2019-08-22 09:30",price:"100",card:"21468237648764728574572",way:"credit"},
        {name:"易基金天天理财A",time:"2019-08-22 09:30",price:"100",card:"21468237648764728574572",way:"credit"},
        {name:"易基金天天理财A",time:"2019-08-22 09:30",price:"100",card:"21468237648764728574572",way:"credit"},
        {name:"易基金天天理财A",time:"2019-08-22 09:30",price:"100",card:"21468237648764728574572",way:"debit"},
        {name:"易基金天天理财A",time:"2019-08-22 09:30",price:"100",card:"21468237648764728574572",way:"debit"},
        {name:"易基金天天理财A",time:"2019-08-22 09:30",price:"100",card:"21468237648764728574572",way:"debit"},
        {name:"易基金天天理财A",time:"2019-08-22 09:30",price:"100",card:"21468237648764728574572",way:"debit"},
      ]
    }


  },
 computed: {
      settime:function(){
        var myDate = new Date();
        var n = myDate.getFullYear(); //获取完整的年份(4位,1970-????)
        var m = myDate.getMonth()+1; //获取当前月份(0-11,0代表1月)
         m = m < 10 ? '0' + m : m;
        return n + '-' + m
      }
  },
  created(){
    //初始起始日期
    let month = this.currentDate.getMonth() + 1;
    let day = this.currentDate.getDate();
    if (month < 10) {
      month = "0" + month;
    }
    if (day < 10) {
      day = "0" + day;
    }
    this.startTime = this.currentDate.getFullYear() + "-" + month + "-" + day;
    this.endTime = this.startTime;
    console.log(this.startTime);
  },
  mounted() {
    //请求数据
  },
  methods: {
     showPopup() {
      this.show = true;
    },
    onConfirm() {
      this.$refs.item.toggle();
    },
    addclass:function(){
      console.log('122')
    },
    //切换显示
    getinfo(i){
      this.isif=i
      this.visible=true
      console.log(i)
    },
    //时间格式
    formatter(type, value) {
      if (type === 'year') {
        return `${value}年`;
      } else if (type === 'month') {
        return `${value}月`
      }
      return value;
    },
    //获取时间
    confirm(val) {
      this.mounthtime=this.$options.methods.formatDate(val)
      },
    // 获取时间
    change(e) {
       console.log(e.getValues()) // 打印出了选中的时间，是个数组
    },
    //取消选择
    cancel(){

    },
    //格式化日期
    formatDate:function (date) {
    var y = date.getFullYear();
    var m = date.getMonth() + 1;
    m = m < 10 ? '0' + m : m;
    var d = date.getDate();
    d = d < 10 ? ('0' + d) : d;
    return y + '-' + m  // 到天数 + '-' + d;
  },
  //展示popup
    timeSelect() {
      this.visible = true;
    },
    //完成
    confirm() {
      console.log(this.startTime, this.endTime);
      let endindTime = this.endTime.split("-").join("");
      let startTime = this.startTime.split("-").join("");
      if (endindTime - startTime >= 0) {
        this.initTime = this.startTime;
        this.finishTime = this.endTime;
        this.visible = false;
      } else {
        this.isShow = true;
      }
    },
    //时间选择器数据的过滤
    formatter(type, value) {
      if (type === "year") {
        return `${value}年`;
      } else if (type === "month") {
        return `${value}月`;
      } else if (type === "day") {
        return `${value}日`;
      }
      return value;
    },
    //时间选择器时间改变
    change(value) {
      // let endindTime = this.endTime.split("-").join("");
      // let startTime = this.startTime.split("-").join("");
      // if (endindTime - startTime >= 0) {
      //   this.isShow = false;
      // } else {
      //   this.isShow = true;
      // }
      this.isShow = false;
      let arr = value.getValues();
      if (this.startSelected) {
        this.startTime =
          arr[0].substr(0, 4) +
          "-" +
          arr[1].substr(0, 2) +
          "-" +
          arr[2].substr(0, 2);
      } else {
        this.endTime =
          arr[0].substr(0, 4) +
          "-" +
          arr[1].substr(0, 2) +
          "-" +
          arr[2].substr(0, 2);
      }
    },
    startHandle() {
      this.startSelected = true;
      this.endSelected = false;
      let startTime = this.startTime.split("-").join(",");
      console.log(startTime);
      this.currentDate = new Date(startTime);
    },
    endHandle() {
      this.startSelected = false;
      this.endSelected = true;
      let endTime = this.endTime.split("-").join(",");
      console.log(endTime);
      this.currentDate = new Date(endTime);
    }
  }
};
</script>
<style lang="scss" scoped>
// 重置样式
p,h1,h2,h3,h4,h5,img{
  margin: 0;
  padding: 0;
}
// 外部样式
.outer {
  height: auto;
  width: 100vw;
  background: #fff;
}
// 内部样式
.content{
  display: flex;
  flex-direction: column;
  align-items: baseline;
}
.article{
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
  width: px2vw(750);
  height: px2vw(130);
}
// 头部框
.van-dropdown-menu {
 height:px2vw(50);
 border: none;
}
.van-hairline--top-bottom{
  padding-left: px2vw(40);
}
/deep/ .van-datetime-picker{
  margin-top: px2vw(30);
  display: flex;
  flex-direction: column-reverse;
}
/deep/ .van-dropdown-menu .van-dropdown-menu__item{
  width:px2vw(172);
  height:px2vw(50);
  background:rgba(244,245,248,1);
  border-radius:px2vw(25);
  text-align: center;
  margin-right: px2vw(20);
}

/deep/  .van-dropdown-menu .van-dropdown-menu__item .van-dropdown-menu__title .van-ellipsis{
  width:px2vw(96);
  height:px2vw(50);
  font-size:px2vw(24);
  font-family:PingFangSC-Regular,PingFangSC;
  font-weight:400;
  color:rgba(38,38,38,1);
  line-height:px2vw(50);
}
/deep/  .van-dropdown-menu  .van-dropdown-menu__title::after{
  top: px2vw(18);
}
/deep/ .van-cell--clickable{
  width: 100%;
  height: px2vw(100);
  padding: 0 px2vw(40) 0;
  font-size:px2vw(30);
  font-family:PingFangSC-Regular,PingFangSC;
  font-weight:400;
  color:rgba(38,38,38,1);
  line-height:px2vw(100);
}
/deep/ .van-dropdown-menu div:nth-of-type(3) .van-cell:nth-of-type(1){
  display: none;
}
/deep/ .van-dropdown-menu  .dropdown_span{
  display: block;
  width:px2vw(172);
  height:px2vw(50);
  background:rgba(244,245,245,1);
  border-radius:px2vw(25);
  text-align: center;
  margin-left: px2vw(40);
  margin-top:px2vw(40);
  line-height: px2vw(50);
  font-size:px2vw(24);
}
// 月份选择
/deep/ .van-picker__toolbar{
  z-index: 10;
  display:flex;
  align-items: center;
}
/deep/ .van-picker__confirm{
  width: 50%;
  background:linear-gradient(136deg,rgba(255,190,78,1) 0%,rgba(255,159,8,1) 100%);
  text-align: center;
  font-size:px2vw(30);
  font-family:PingFangSC-Regular,PingFangSC;
  font-weight:400;
  color:rgba(255,255,255,1);
}
/deep/ .van-picker__cancel{
  width: 50%;
  background:rgba(255,255,255,1);
  box-shadow:-5px -5px 20px 0px rgba(69,69,83,0.05);
  text-align: center;
  font-size:px2vw(30);
  font-family:PingFangSC-Regular,PingFangSC;
  font-weight:400;
  color:rgba(38,38,38,1);
}
/deep/ .van-picker__columns{
  height: px2vw(300);
}
.active{
  border: px2vw(1) solid #EBEEF0FF;
  background: red;
  height: 20px;
  width: 20px;
}
//月份日期
.mounthtimestyle{
  text-align: center;
  height:px2vw(30);
  font-size:px2vw(30);
  font-family:PingFangSC-Regular,PingFangSC;
  font-weight:400;
  color:rgba(62,143,255,1);
  line-height:px2vw(30);
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: px2vw(20);
}
.mounthtimestyle_p{
  margin: 0 px2vw(40) 0 ;
}
//内部左边
.article .article_left{
  display: flex;
  flex-direction: row;
  align-items: center;
  box-sizing: border-box;
  padding-left: px2vw(40);
}
.article_left .img{
  width: px2vw(70);
  margin-right: px2vw(20);
}
.article_left_data p{
  height:px2vw(30);
  font-size:px2vw(30);
  font-family:PingFangSC-Regular,PingFangSC;
  font-weight:400;
  color:rgba(38,38,38,1);
  line-height:px2vw(30);
  letter-spacing:px2vw(1);
}
.article_left_data span{
  height:px2vw(24);
  font-size:px2vw(24);
  font-family:PingFangSC-Regular,PingFangSC;
  font-weight:400;
  color:rgba(125,125,125,1);
  line-height:px2vw(24);
  display: block;
  margin-top: px2vw(20);
}
//内部右边
.article .article_right{
  display: flex;
  flex-direction: column;
  align-items: center;
  box-sizing: border-box;
  padding-right: px2vw(40);
}
.article_right p{
  width: 100%;
  height:px2vw(38);
  font-size:px2vw(40);
  font-family:PingFangSC-Medium,PingFangSC;
  font-weight:500;
  color:rgba(38,38,38,1);
  line-height:px2vw(38);
  text-align: right;
}
.article_right h5{
  height:px2vw(24);
  font-size:px2vw(24);
  font-family:PingFangSC-Regular,PingFangSC;
  font-weight:400;
  color:rgba(125,125,125,1);
  line-height:px2vw(24);
  margin-top: px2vw(20);
}
</style>
